name: Nightly Check
on:
  schedule:
    - cron: '0 2 * * 1-5' # UTC
  workflow_dispatch:
jobs:
  copyright:
    name: Copyright
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout CI Code
        uses: actions/checkout@v4
        with:
          path: secure-api-gateway-ci
          repository: SecureApiGateway/secure-api-gateway-ci
      # Common
      - name: Call check copyright for Common V3
        uses: ./secure-api-gateway-ci/.github/actions/check-copyright
        with:
          checkoutBranch: master
          checkoutCode: true
          repositoryName: SecureApiGateway/secure-api-gateway-ob-uk-common
        # RS
      - name: Call check copyright for RS V3
        uses: ./secure-api-gateway-ci/.github/actions/check-copyright
        with:
          checkoutBranch: master
          checkoutCode: true
          repositoryName: SecureApiGateway/secure-api-gateway-ob-uk-rs
      # RCS
      - name: Call check copyright for RCS V3
        uses: ./secure-api-gateway-ci/.github/actions/check-copyright
        with:
          checkoutBranch: master
          checkoutCode: true
          repositoryName: SecureApiGateway/secure-api-gateway-ob-uk-rcs
      # Checkout OB Repo
      - name: Checkout OB Repo
        uses: actions/checkout@v4
        with:
          path: secure-api-gateway-ob-uk
          repository: SecureApiGateway/secure-api-gateway-ob-uk
          ref: master
      # Set Maven Config
      - name: Set Maven Config
        uses: ./secure-api-gateway-ci/.github/actions/set-maven-config
        with:
          cache: maven
          javaArchitecture: x64
          javaDistribution: zulu
          javaVersion: 17
      # OB
      - name: Call check copyright for OB V3
        uses: ./secure-api-gateway-ci/.github/actions/check-copyright
        with:
          checkoutBranch: master
          checkoutCode: true
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}
          repositoryName: SecureApiGateway/secure-api-gateway-ob-uk
      # Checkout Core Repo
      - name: Checkout Core Repo
        uses: actions/checkout@v4
        with:
          path: secure-api-gateway-core
          repository: SecureApiGateway/secure-api-gateway-core
          ref: main
      # Set Maven Config
      - name: Set Maven Config
        uses: ./secure-api-gateway-ci/.github/actions/set-maven-config
        with:
          cache: maven
          javaArchitecture: x64
          javaDistribution: zulu
          javaVersion: 17
      # CORE
      - name: Call check copyright for CORE V3
        uses: ./secure-api-gateway-ci/.github/actions/check-copyright
        with:
          checkoutCode: false
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}
          repositoryName: secure-api-gateway-core
      - name: Set Var if Failure
        if: failure()
        run: |
          echo FAILUREINBUILD=true >> ${GITHUB_ENV}
  analyze-core:
    name: Analyze Core
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 360
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
      - name: Checkout CI Code
        uses: actions/checkout@v4
      - name: Call code-scanning on Core
        uses: ./.github/actions/code-scanning
        with:
          cache: 'maven'
          checkoutBranch: main
          checkoutCode: true
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}
          actionTrigger: nightly
          javaArchitecture: x64
          javaDistribution: 'zulu'
          javaVersion: '17'
          language: 'java-kotlin'
          repositoryName: SecureApiGateway/secure-api-gateway-core
      - name: Set Var if Failure
        if: failure()
        run: |
          echo FAILUREINBUILD=true >> ${GITHUB_ENV}
  analyze-common:
    name: Analyze Common
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 360
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
      - name: Checkout CI Code
        uses: actions/checkout@v4
      - name: Call code-scanning on Core
        uses: ./.github/actions/code-scanning
        with:
          cache: 'maven'
          checkoutBranch: master
          checkoutCode: true
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}
          actionTrigger: nightly
          javaArchitecture: x64
          javaDistribution: 'zulu'
          javaVersion: '17'
          language: 'java-kotlin'
          repositoryName: SecureApiGateway/secure-api-gateway-ob-uk-common
      - name: Set Var if Failure
        if: failure()
        run: |
          echo FAILUREINBUILD=true >> ${GITHUB_ENV}
  analyze-rs:
    name: Analyze RS
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 360
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
      - name: Checkout CI Code
        uses: actions/checkout@v4
      - name: Call code-scanning on Core
        uses: ./.github/actions/code-scanning
        with:
          cache: 'maven'
          checkoutBranch: master
          checkoutCode: true
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}
          actionTrigger: nightly
          javaArchitecture: x64
          javaDistribution: 'zulu'
          javaVersion: '17'
          language: 'java-kotlin'
          repositoryName: SecureApiGateway/secure-api-gateway-ob-uk-rs
      - name: Set Var if Failure
        if: failure()
        run: |
          echo FAILUREINBUILD=true >> ${GITHUB_ENV}
  analyze-rcs:
    name: Analyze RCS
    runs-on: 'ubuntu-22.04'
    timeout-minutes: 360
    permissions:
      security-events: write
      actions: read
      contents: read
    strategy:
      fail-fast: false
    steps:
      - name: Checkout CI Code
        uses: actions/checkout@v4
      - name: Call code-scanning on Core
        uses: ./.github/actions/code-scanning
        with:
          cache: 'maven'
          checkoutBranch: master
          checkoutCode: true
          FR_ARTIFACTORY_USER: ${{ secrets.FR_ARTIFACTORY_USER }}
          FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ secrets.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}
          actionTrigger: nightly
          javaArchitecture: x64
          javaDistribution: 'zulu'
          javaVersion: '17'
          language: 'java-kotlin'
          repositoryName: SecureApiGateway/secure-api-gateway-ob-uk-rcs
      - name: Set Var if Failure
        if: failure()
        run: |
          echo FAILUREINBUILD=true >> ${GITHUB_ENV}
  check-for-failure:
    name: Check for failure & Notify
    runs-on: 'ubuntu-22.04'
    needs: [copyright, analyze-core,analyze-common,analyze-rs,analyze-rcs]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    steps:
      # Checkout CI Repo
      - name: Checkout CI Code
        uses: actions/checkout@v4
      # Auth GCP, SDK & Artifact Registry
      - name: Call Authentication
        uses: ./.github/actions/authentication
        with:
          gcpKey: ${{ secrets.GCP_SECRET_READ }}
          garLocation: ${{ vars.GAR_LOCATION }}
      # Get Webhook from GSM
      - name: Get Webhook URL from GSM
        run: |
          echo "SLACK_WEBHOOK=$(gcloud --project ${{ vars.SAPIG_PROJECT }} secrets versions access latest --secret=${{ vars.GSM_SBAT_WEBOOK_NAME }})" >> $GITHUB_ENV
      - name: Slack Notification
        uses: rtCamp/action-slack-notify@v2
        env:
          MSG_MINIMAL: commit
          SLACK_COLOR: failure
          SLACK_MESSAGE: Please check the link in the message
          SLACK_TITLE: Nightly Components Checks Failed
          SLACK_USERNAME: GitHub Actions
          SLACK_WEBHOOK: ${{ env.SLACK_WEBHOOK }}