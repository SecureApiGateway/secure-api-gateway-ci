name: Build Image and Artifact
description: Common steps to deploy a built docker image to a target environment
inputs:
  argoServiceName:
    description: Name of the service in Argo CD
    required: true
  branchName:
    description: The branch that is being deployed in argo
    required: false
  cfAPIKey:
    description: The Codefresh API key for auth
    required: true
  cfTriggerName:
    description: The name of the trigger in Codefresh pipeline to use
    required: true
  cfPipelineBranch:
    description: The Branch to use to run the pipeline
    required: true
  changeBranch:
    description: Is argo syncing a Branch, if false then a tag is synced
    required: true
  dockerTag:
    description: The Tag that is being deployed in argo
    required: false
  gitTrigger:
    description: What operation is being performed
    required: true
  sapigType:
    description: The Type of SAPIG that is being deployed, use BOTH for deployments that need to go to both
    required: true
  serviceName:
    description: The Service name that is being updated
    required: true
  testTrustedDirectoryArgoServiceName:
    description: The parameter name(s) of the test trusted directory in Argo
    required: false
  testTrustedDirectoryServiceName:
    description: The Service name for the test trusted directory
    required: false
runs:
  using: composite
  steps:
    - name: Create Lowercase Github Username
      shell: bash
      run: |
        
        if [ "${{ inputs.gitTrigger }}" == "pr" ]; then
          echo "GITHUB_USER=$(echo ${{github.actor}} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}
        else
          echo "GITHUB_USER=dev" >> ${GITHUB_ENV}
        fi
        
        if [[ ${{ inputs.sapigType }} == "both" ]]; then
          echo DEPLOYOB=true >> ${GITHUB_ENV}
          echo DEPLOYCORE=true >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
        elif [[ ${{ inputs.sapigType }} == "ob" ]]; then
          echo DEPLOYOB=true >> ${GITHUB_ENV}
          echo DEPLOYCORE=false >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
        elif [[ ${{ inputs.sapigType }} == "core" ]]; then
          echo DEPLOYOB=false >> ${GITHUB_ENV}
          echo DEPLOYCORE=true >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
        elif [[ ${{ inputs.sapigType }} == "test-trusted-directory" ]]; then
          echo DEPLOYOB=false >> ${GITHUB_ENV}
          echo DEPLOYCORE=true >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.testTrustedDirectoryArgoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.testTrustedDirectoryServiceName }} >> ${GITHUB_ENV}
        elif [[ ${{ inputs.sapigType }} == "none" ]]; then
          echo DEPLOYOB=false >> ${GITHUB_ENV}
          echo DEPLOYCORE=false >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
        else
          echo "Unexpected value for sapigType, use 'ob','core','both','test-trusted-directory' or 'none'"
        fi
        
        # Wherever to sync the branch of a tag in argo CD
        if [ "${{ inputs.changeBranch }}" == "true" ]; then
          echo "ARGO_DEPLOY_ARG=NEWBRANCH=${{ inputs.branchName }}" >> ${GITHUB_ENV}
        else
          echo "ARGO_DEPLOY_ARG=TAG=${{ inputs.dockerTag }}" >> ${GITHUB_ENV}
        fi

    - name: 'Update OB Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYOB == 'true'
      with:
        args: '-v ${{ env.ARGO_DEPLOY_ARG }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=${{ env.GITHUB_USER }}-ob'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-ob-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ inputs.cfTriggerName }}
        CF_BRANCH: ${{ inputs.cfPipelineBranch }}

    - name: 'Update Core Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYCORE == 'true'
      with:
        args: '-v ${{ env.ARGO_DEPLOY_ARG }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=${{ env.GITHUB_USER }}-core'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-core-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ inputs.cfTriggerName }}
        CF_BRANCH: ${{ inputs.cfPipelineBranch }}

    - name: 'Update OB Nightly Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.GITHUB_USER == 'dev' && env.DEPLOYOB == 'true'
      with:
        args: '-v ${{ env.ARGO_DEPLOY_ARG }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=nightly-ob'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-ob-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ inputs.cfTriggerName }}
        CF_BRANCH: ${{ inputs.cfPipelineBranch }}

    - name: 'Update Core Nightly Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.GITHUB_USER == 'dev' && env.DEPLOYCORE == 'true'
      with:
        args: '-v ${{ env.ARGO_DEPLOY_ARG }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=nightly-core'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-core-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ inputs.cfTriggerName }}
        CF_BRANCH: ${{ inputs.cfPipelineBranch }}