name: Build Image and Artifact
description: Common steps to deploy a built docker image to a target environment
inputs:
  argoServiceName:
    description: Name of the service in Argo CD
    required: true
  branchName:
    description: The branch that is being deployed in argo
    required: false
  cfAPIKey:
    description: The Codefresh API key for auth
    required: true
  cfTriggerName:
    description: The name of the trigger in Codefresh pipeline to use
    required: true
  cfPipelineBranch:
    description: The Branch to use to run the pipeline
    required: true
  changeBranch:
    description: Is argo syncing a Branch, if false then a tag is synced
    required: true
  dockerTag:
    description: The Tag that is being deployed in argo
    required: false
  gitTrigger:
    description: What operation is being performed
    required: true
  sapigType:
    description: The Type of SAPIG that is being deployed, use BOTH for deployments that need to go to both
    required: true
  serviceName:
    description: The Service name that is being updated
    required: true
  targetEnv:
    description: What environment is being targeted
    required: true
runs:
  using: composite
  steps:
    - name: Create Lowercase Github Username
      shell: bash
      run: |
        # Deciding what environment to deploy too, either individual or dev envs
        if [ "${{ inputs.gitTrigger }}" == "pr" ]; then
          echo "GITHUB_USER=$(echo ${{github.actor}} | tr '[:upper:]' '[:lower:]')" >> ${GITHUB_ENV}
        else
          if [ "${{ inputs.targetEnv }}" == "dev-cdk" ]; then
            echo "GITHUB_USER=dev-cdk" >> ${GITHUB_ENV}
          elif [ "${{ inputs.targetEnv }}" == "dev-aic" ]; then
            echo "GITHUB_USER=dev-aic" >> ${GITHUB_ENV}
          else
            echo "GITHUB_USER=both" >> ${GITHUB_ENV}
          fi
        fi
        
        # Deciding if its a core or ob component or both
        if [[ ${{ inputs.sapigType }} == "both" ]]; then
          echo DEPLOYOB=true >> ${GITHUB_ENV}
          echo DEPLOYCORE=true >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
          echo TRIGGERNAMECORE=github-actions-trigger-core >> ${GITHUB_ENV}
          echo TRIGGERNAMEOB=github-actions-trigger-gateway >> ${GITHUB_ENV}
          echo TRIGGERBRANCHCORE=main >> ${GITHUB_ENV}
          echo TRIGGERBRANCHOB=main >> ${GITHUB_ENV}
        elif [[ ${{ inputs.sapigType }} == "ob" ]]; then
          echo DEPLOYOB=true >> ${GITHUB_ENV}
          echo DEPLOYCORE=false >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
          echo TRIGGERNAMEOB=github-actions-trigger-gateway >> ${GITHUB_ENV}
          echo TRIGGERBRANCHOB=main >> ${GITHUB_ENV}
        elif [[ ${{ inputs.sapigType }} == "core" ]]; then
          echo DEPLOYOB=false >> ${GITHUB_ENV}
          echo DEPLOYCORE=true >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
          echo TRIGGERNAMECORE=github-actions-trigger-core >> ${GITHUB_ENV}
          echo TRIGGERBRANCHCORE=main >> ${GITHUB_ENV}
        elif [[ ${{ inputs.sapigType }} == "none" ]]; then
          echo DEPLOYOB=false >> ${GITHUB_ENV}
          echo DEPLOYCORE=false >> ${GITHUB_ENV}
          echo ARGOSERVICENAME=${{ inputs.argoServiceName }} >> ${GITHUB_ENV}
          echo SERVICENAME=${{ inputs.serviceName }} >> ${GITHUB_ENV}
        else
          echo "Unexpected value for sapigType, use 'ob','core','both' or 'none'"
        fi
        
        # Wherever to sync a new branch or use HEAD
        if [ "${{ inputs.changeBranch }}" == "true" ]; then
          echo "ARGO_DEPLOY_BRANCH=NEWBRANCH=${{ inputs.branchName }}" >> ${GITHUB_ENV}
        else
          echo "ARGO_DEPLOY_BRANCH=NEWBRANCH=HEAD" >> ${GITHUB_ENV}
        fi
        # Sync the tag regardless, we want cdk envs to always be dev image so that studio doesn't get removed, latest is a prod image so that goes to AIC, and individual envs will be using a PR build
        if [[ "${{ inputs.serviceName }}" == "fapiPepAs" || "${{ inputs.serviceName }}" == "fapiPepRs" || "${{ inputs.serviceName }}" == "testTrustedDirectory" ]]; then
          echo "ARGO_CDK_DEPLOY_TAG=TAG=dev" >> ${GITHUB_ENV}
          echo "ARGO_AIC_DEPLOY_TAG=TAG=latest" >> ${GITHUB_ENV}
          echo "ARGO_DEPLOY_TAG=TAG=${{ inputs.dockerTag }}" >> ${GITHUB_ENV}
        else
          echo "ARGO_CDK_DEPLOY_TAG=TAG=latest" >> ${GITHUB_ENV}
          echo "ARGO_AIC_DEPLOY_TAG=TAG=latest" >> ${GITHUB_ENV}
          echo "ARGO_DEPLOY_TAG=TAG=${{ inputs.dockerTag }}" >> ${GITHUB_ENV}
        fi
    # Deploy to OB Individual Environment
    - name: 'Update OB Individual Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYOB == 'true' && env.GITHUB_USER != 'both'
      with:
        args: '-v ${{ env.ARGO_DEPLOY_TAG }} -v ${{ env.ARGO_DEPLOY_BRANCH }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=${{ env.GITHUB_USER }}-ob'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-ob-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ env.TRIGGERNAMEOB }}
        CF_BRANCH: ${{ env.TRIGGERBRANCHOB }}
    # Deploy to OB Dev-CDK & Dev-AIC
    - name: 'Update CDK-OB Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYOB == 'true' && env.GITHUB_USER == 'both'
      with:
        args: '-v ${{ env.ARGO_CDK_DEPLOY_TAG }} -v ${{ env.ARGO_DEPLOY_BRANCH }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=dev-cdk-ob'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-ob-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ env.TRIGGERNAMEOB }}
        CF_BRANCH: ${{ env.TRIGGERBRANCHOB }}
    - name: 'Update AIC-OB Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYOB == 'true' && env.GITHUB_USER == 'both'
      with:
        args: '-v ${{ env.ARGO_AIC_DEPLOY_TAG }} -v ${{ env.ARGO_DEPLOY_BRANCH }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=dev-aic-ob'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-ob-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ env.TRIGGERNAMEOB }}
        CF_BRANCH: ${{ env.TRIGGERBRANCHOB }}
    # Deploy to Core Individual Environment
    - name: 'Update Core Individual Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYCORE == 'true' && env.GITHUB_USER != 'both'
      with:
        args: '-v ${{ env.ARGO_DEPLOY_TAG }} -v ${{ env.ARGO_DEPLOY_BRANCH }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=${{ env.GITHUB_USER }}-core'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-core-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ env.TRIGGERNAMECORE }}
        CF_BRANCH: ${{ env.TRIGGERBRANCHCORE }}
    # Deploy to Dev-CDK & Dev-AIC
    - name: 'Update CDK-Core Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYCORE == 'true' && env.GITHUB_USER == 'both'
      with:
        args: '-v ${{ env.ARGO_CDK_DEPLOY_TAG }} -v ${{ env.ARGO_DEPLOY_BRANCH }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=dev-cdk-core'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-core-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ env.TRIGGERNAMECORE }}
        CF_BRANCH: ${{ env.TRIGGERBRANCHCORE }}
    - name: 'Update AIC-Core Environment'
      uses: codefresh-io/codefresh-pipeline-runner@master
      if: env.DEPLOYCORE == 'true' && env.GITHUB_USER == 'both'
      with:
        args: '-v ${{ env.ARGO_AIC_DEPLOY_TAG }} -v ${{ env.ARGO_DEPLOY_BRANCH }} -v ARGO_VALUES_PREFIX=${{ env.ARGOSERVICENAME }} -v SERVICE_NAME=${{ env.SERVICENAME }} -v ENVIRONMENT=dev-aic-core'
      env:
        PIPELINE_NAME: SAPIG-devenv/dev-core-service-build
        CF_API_KEY: ${{ inputs.cfAPIKey }}
        TRIGGER_NAME: ${{ env.TRIGGERNAMECORE }}
        CF_BRANCH: ${{ env.TRIGGERBRANCHCORE }}