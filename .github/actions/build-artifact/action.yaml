name: Build Artifact
description: Common steps to build a Maven artifact
inputs:
  checkoutCode:
    description: Wherever or not to checkout the code for the repo
    required: true
  repositoryName:
    description: The repository name to checkout
    required: true
  mavenBuildCommands:
    description: The maven commands to be ran to product the artifact
    required: true
  FR_ARTIFACTORY_USER:
    description: What user to use to auth to Maven Server
    required: true
  FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD:
    description: What user password to use to auth to Maven Server
    required: true
runs:
  using: composite
  steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      if: inputs.checkoutCode == 'true'
      with: 
        repository: ${{ inputs.repositoryName }}
        path: ${{ inputs.repositoryName }}
    - name: Get Version
      shell: bash
      run: |
        echo "VERSION=$( cd ${{ inputs.repositoryName }} && mvn help:evaluate -Dexpression=project.version -q -DforceStdout )" >> $GITHUB_ENV
        echo "MAVEN_SERVER_COMMUNITY=maven.forgerock.org-community" >> $GITHUB_ENV
      env:
        FR_ARTIFACTORY_USER: ${{ inputs.FR_ARTIFACTORY_USER }}
        FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ inputs.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}
    - name: Push to community snapshot if version contains snapshot
      if: contains( env.VERSION, 'SNAPSHOT')
      shell: bash
      run: |
        echo "MAVEN_SERVER_COMMUNITY=maven.forgerock.org-community-snapshots" >> $GITHUB_ENV
    - name: Set Cache with Community Repository
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        architecture: x64
        cache: 'maven'
        server-id: ${{ env.MAVEN_SERVER_COMMUNITY }} # community repo to publish the java artifact
        server-username: FR_ARTIFACTORY_USER # placeholder variable for username in deploy
        server-password: FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD # placeholder variable for token in deploy
    - name: Deploy Core Maven Artifact Package
      shell: bash
      run: |
        cd ${{ inputs.repositoryName }}
        ${{ inputs.mavenBuildCommands }}
      env:
        FR_ARTIFACTORY_USER: ${{ inputs.FR_ARTIFACTORY_USER }}
        FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD: ${{ inputs.FR_ARTIFACTORY_USER_ENCRYPTED_PASSWORD }}